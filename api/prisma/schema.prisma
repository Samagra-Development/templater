// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TemplateType {
  JINJA //https://mozilla.github.io/nunjucks/
  JS_TEMPLATE_LITERALS //JSTL
  EJS //https://ejs.co/
}

enum TransformerType {
  OPTIONS
  FUNCTION_EXTERNAL //https://www.w3.org/TR/did-core/ => "did:example:123456789abcdefghi"
  FUNCTION_INTERNAL
}

enum Language {
  JAVASCRIPT
  TYPESCRIPT
}

enum Event {
  ADDED
  DELETED
  MODIFIED
  RENDERED
}

enum FunctionExecutionEvent {
  ADDED
  DELETED
  MODIFIED
  RUN
}

enum LanguageCodes {
  aa
  ab
  af
  ak
  am
  ar
  an
  as
  av
  ae
  ay
  az
  ba
  bm
  be
  bn
  bi
  bo
  bs
  br
  bg
  ca
  cs
  ch
  ce
  cu
  cv
  kw
  co
  cr
  cy
  da
  de
  dv
  dz
  el
  en
  eo
  et
  eu
  ee
  fo
  fa
  fj
  fi
  fr
  fy
  ff
  gd
  ga
  gl
  gv
  gn
  gu
  ht
  ha
  sh
  he
  hz
  hi
  ho
  hr
  hu
  hy
  ig
  io
  ii
  iu
  ie
  ia
  id
  ik
  is
  it
  jv
  ja
  kl
  kn
  ks
  ka
  kr
  kk
  km
  ki
  rw
  ky
  kv
  kg
  ko
  kj
  ku
  lo
  la
  lv
  li
  ln
  lt
  lb
  lu
  lg
  mh
  ml
  mr
  mk
  mg
  mt
  mn
  mi
  ms
  my
  na
  nv
  nr
  nd
  ng
  ne
  nl
  nn
  nb
  no
  ny
  oc
  oj
  or
  om
  os
  pa
  pi
  pl
  pt
  ps
  qu
  rm
  ro
  rn
  ru
  sg
  sa
  si
  sk
  sl
  se
  sm
  sn
  sd
  so
  st
  es
  sq
  sc
  sr
  ss
  su
  sw
  sv
  ty
  ta
  tt
  te
  tg
  tl
  th
  ti
  to
  tn
  ts
  tk
  tr
  tw
  ug
  uk
  ur
  uz
  ve
  vi
  vo
  wa
  wo
  xh
  yi
  yo
  za
  zh
  zu
}

model TransformerPathMapping {
  id            BigInt      @id @default(autoincrement())
  path          String
  transformer   Transformer @relation(fields: [transformerId], references: [id])
  Template      Template?   @relation(fields: [templateId], references: [id])
  templateId    BigInt?
  transformerId BigInt
}

model Template {
  createdAt      DateTime                 @default(now())
  updatedAt      DateTime                 @updatedAt
  id             BigInt                   @id @default(autoincrement())
  type           TemplateType
  useCase        String?
  body           String?
  bodyI18n       BodyI18n[]
  meta           Json?
  user           String                   @db.Uuid
  tag            String[]
  Audit          Audit[]
  ExecutionAudit ExecutionAudit[]
  transformers   TransformerPathMapping[]

  @@index([tag])
}

model Audit {
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  id           BigInt   @id @default(autoincrement())
  templateId   BigInt
  template     Template @relation(fields: [templateId], references: [id])
  event        Event
  renderedText String
  meta         Json?
}

model Transformer {
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
  id         BigInt          @id @default(autoincrement())
  type       TransformerType
  meta       Json?
  sampleData Json?

  // When the type is FunctionRef
  functionDID            String?
  ExecutionAudit         ExecutionAudit[]
  TransformerPathMapping TransformerPathMapping[]
}

model ExternalLambda {
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  id         BigInt   @id @default(autoincrement())
  uri        String
  meta       Json?
  sampleData Json?
}

model Lambda {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id        BigInt   @id @default(autoincrement())
  tags      String[]
  name      String
  body      String
  user      String   @db.Uuid
  isOpen    Boolean
  isActive  Boolean
  isPublic  Boolean
  language  Language
}

model ExecutionAudit {
  createdAt     DateTime               @default(now())
  updatedAt     DateTime               @updatedAt
  id            BigInt                 @id @default(autoincrement())
  event         FunctionExecutionEvent
  meta          Json?
  transformerId BigInt
  Transformer   Transformer            @relation(fields: [transformerId], references: [id])
  templateId    BigInt
  Template      Template               @relation(fields: [templateId], references: [id])
}

model BodyI18n {
  id           BigInt                        @id @default(autoincrement())
  lang         LanguageCodes
  body         String
  templateId   BigInt
  template     Template                      @relation(fields: [templateId], references: [id])
}
